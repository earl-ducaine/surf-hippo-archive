;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;              microCAD2NC  & dec-plan                    ;;;
;;;         workpiece features as TAXON concepts            ;;;
;;;                                                         ;;;
;;;  Version 1                ph. hanschke Sept 91          ;;;
;;;  New Taxon Syntax         a.  abecker  Aug  92          ;;;
;;;  Small Refinements        ph. hanschke Sept 92          ;;;
;;;  Last Extensions          a. abecker   Oct  92          ;;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

;Interesting features defined in this file
(hierarchy
             RSHOULDER 
             LSHOULDER
             RNOSE
             LNOSE
             LONGTURNINGSURFACE
             GROOVE
             TRUNCONE 
             CYLINDER 
             CIRCLE
             ASC-TC
             DESC-TC
             LTS+TC
             TC+LTS
             TC+LTS+TC
             WORKPIECE)


;The concrete domain of rational numbers with comparison
;operators and boolean connectives is assigned to the tag RO.
(doma ro edom-real-ord)

;Some simple predicates of the concrete domain.
(cpred  >0	(ro (x) (> x 0)))
(cpred  <0 	(ro (x) (< x 0)))
(cpred  >=0 	(ro (x) (>= x 0)))
(cpred  <=0 	(ro (x) (<= x 0)))
(cpred  =0 	(ro (x) (= x 0)))
(cpred  <= 	(ro (x y) (<= x y)))
(cpred  >= 	(ro (x y) (>= x y)))
(cpred  < 	(ro (x y) (< x y)))
(cpred  > 	(ro (x y) (> x y)))
(cpred  != 	(ro (x y) (<> x y)))
(cpred  = 	(ro (x y) (= x y)))



;Seperate atomic and composed objects
(ofam levels-of-composition (atomic biconic triconic nconic))


;A truncated cone is given by two centers and two radii.
;It should not degenerate.
(attr	radius1)
(attr	radius2)
(attr	center1)
(attr	center2)

;A truncated cone should really have a surface
(cpred	tc-condition
  (ro (r1 r2 c1 c2)
      (and    (>= r1 0)
	      (>= r2 0)
	      (or (and (=  c1 c2)
		       (<> r1 r2))
		  (and (<> c1 c2)
		       (or (> r1 0)
			   (> r2 0)))))))

(conc	truncone
  (and atomic
       (some (radius1) (radius2) (center1) (center2) tc-condition )))


;A ring is a very flat surface
(conc	ring
  (and truncone (forall (center1) (center2) =)))


;Two adjectives, filled and hollow, suitable for  non rings. They replace
;the in/out resp. left/right resp. +/- flags determining the orientation of the
;surface. 
(conc	filled (and (forall (center1) (center2) <)))
(conc   hollow	(and (forall (center1) (center2) >)))

;two adjectives, ascending and descending, suitable for filled truncated cones.
(conc	ascending (and (forall (radius1) (radius2) <=)))
(conc	descending (and (forall (radius1) (radius2) >=)))

;A cylinder
;(conc   cylinder (and truncone (forall (radius1) (radius2) =)))
 (conc   cylinder (and truncone (agree (radius1) (radius2))))

;A circle is a ring where one radius is 0
(conc	circle (and ring (or (forall (radius1) =0) (forall (radius2) =0))))


;A cone
(conc   cone (and truncone (or (forall (radius1) =0) (forall (radius2) =0))))


;Applying some adjectives to ring, circle, and cone.
(conc	asc-tc (and truncone ascending))
(conc	desc-tc (and truncone descending))
(conc	asc-ring (and ring ascending))
(conc	desc-ring (and ring descending))
(conc	asc-circle (and ring (forall (radius1) =0)))
(conc	desc-circle (and ring (forall  (radius2) =0)))
(conc	asc-cone (and truncone (forall (radius1) =0)))
(conc	desc-cone (and truncone (forall (radius2) =0)))


;Seperate shoulders from grooves
;(prim	shoulder-class)
;(conc	groove-class	(not shoulder-class))


;Neighbourhood is represented by an abstract binary predicate
;(apred	neighbouring 2)

;Each feature has a leftmost and a rightmost truncated cone
(attr leftmost rightmost)
(conc feature	(and (some (leftmost) truncone)
		     (some (rightmost) truncone)
		     (forall (leftmost center1) (rightmost center2) <=)
		     )
  )


;For long turning surface only necessary conditions can be expressed
(prim list)
(ofam levels-of-composition (h-lts))
(attr radius sof)
(conc lts (and h-lts feature
	       (some (sof) list)
	       (some (radius) >=0)))

;Attributes for long turning surfaces and shoulders
(attr	ground
  flank
  depth2width
  depth
  width
  )


;There are two kinds of shoulders
(ofam levels-of-composition (lts+ +lts))
(conc	tc+lts
  (and +lts feature
       (agree (leftmost) (flank))
       (agree (rightmost) (ground rightmost))
       (some (flank) truncone)
       (some (ground) lts)))
(conc	lnose (and tc+lts (forall (flank) ascending)))
(conc	lshoulder (and tc+lts (forall (flank) descending)))
(conc	lts+tc
  (and lts+ feature
       (agree (rightmost) (flank))
       (agree (leftmost) (ground leftmost))
       (some (flank) truncone)
       (some (ground) lts)))
(conc	rnose (and lts+tc (forall (flank) descending)))
(conc	rshoulder (and lts+tc (forall (flank) ascending)))

;A groove and tower
(ofam levels-of-composition (+lts+))
(attr	left right)
(conc	tc+lts+tc
  (and +lts+ feature
       (some (left) tc+lts)
       (some (right) lts+tc)
       (agree (leftmost) (left leftmost))
       (agree (rightmost) (right rightmost))
       (agree (left ground) (right ground))
       ))
(conc	up-step
  (and tc+lts+tc
       (forall (left) lnose)
       (forall (right) rshoulder)))
(conc	down-step
  (and tc+lts+tc
       (forall (left) lshoulder)
       (forall (right) rnose)))
(conc	tower
  (and tc+lts+tc
       (forall (left) lnose)
       (forall (right) rnose)))
(conc	groove
  (and tc+lts+tc
       (forall (left) lshoulder)
       (forall (right) rshoulder)))

(cpred	insertion-condition
  (ro (d2w d) (and (< d2w  0.25) (< d 30))))
(conc	insertion
  (and groove (forall (depth2width) (depth) insertion-condition)))


(conc shoulder (or rshoulder lshoulder))
(conc longturningsurface lts)

(conc workpiece (and tc+lts+tc
		     (forall (leftmost) circle)
		     (forall (rightmost) circle)))

