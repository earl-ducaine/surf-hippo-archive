; file    "demo?.rf"
; date    19 june 1990
; author  R. Scheubrein
;
;
; this program is adaped from 
; K.A. Bowen / R. A. Kowalski "amalgamating language and metalanguage in logic programming"
;


;
; kernel procedure
;
(hn (demo _prog _goals)
    (empty _goals))

(hn (demo _prog _goals)
    (select _goals _goal _rest)
    (indet-member _proc _prog)
    (rename _proc _goals _variantproc)
    (parts _variantproc _concl _conds)
    (match _concl _goal _sub)
    (rf-apply (rf-add _conds _rest) _sub _newgoals)
    (demo _prog _newgoals))


;
; help procedures
; 
(hn (empty nil))

(hn (select (_firstgoal . _restgoals) _firstgoal _restgoals))

(hn (indet-member _x _y)
    (indet-member-rest _x _y id))
(hn (indet-member-rest _x (_x . _t) (_x . _t)))
(hn (indet-member-rest _x (_y . _t) _r)
    (indet-member-rest _x _t _r))

(hn (rename _proc _goals _variantproc)
    (get-highest-index _goals _index)
    (rename1 _proc _oldindex _newindex  _variantproc))

(hn !(rename1 nil _oldindex _newindex _variantproc))
(hn !(rename1 (_first . _rest) _oldindex _newindex _variantproc)
    (variable-p _first)
    (increment _oldindex _newindex)
    (change-index _first _newindex  _variantproc _variantproc1)
    (rename1 _rest _newindex _newerindex  _variantproc1))
(hn !(rename1 (_first ._rest) _oldindex _newindex _variantproc)
    (list-p _first)
    (rename1 _first _newindex _newerindex _variantproc)
    (rename1 _rest  _newerindex _morenewerindex _variantproc))
(hn !(rename1 (_first . _rest) _oldindex _newindex _variantproc)
    (rename1 _rest _oldindex _newindex _variantproc))

(hn (variable-p (var . (id . _rest))))
(hn (variable-name (var . (_name . _rest)) _name))
(hn (variable-index (var . (id . nil)) 0))
(hn (variable-index (var . (id . (_index))) _index))

(hn (increment _oldindex _newindex)
    (is _newindex (+ 1 _oldindex)))

(hn !(change-index _variable _newindex nil _newproc))
(hn !(change-index _variable  _newindex (_variable . _rest) _newproc)
    (variable-name _variable _name)
    (rf-append _newproc `(var _name _newindex) _newerproc)
    (change-index _variable _newindex _newerproc))
(hn !(change-index _variable _newindex (_first . _rest) _variantproc1)
    (list-p _first)
    (change-index _variable _newindex _first _variantproc1)
    (change-index _variable _newindex _rest _variantproc1))

(hn (rf-append nil _l _l))
(hn (rf-append (_h . _t) _l (_h . _r))
    (rf-append _t _l _r))

(hn (list-p (id . id)))

(hn (parts (_concl . _conds) _concl _conds))

(hn !(match nil nil _sub))
(hn !(match (_head . _t1) (_head . _t2) _sub)
    (match _t1 _t2 _sub))
(hn !(match (_h1 . _t1) (_h2 . _t2) _sub)
    (variable-p _h1)
    (match _t1 _t2 `((_h1 _h2) (_sub))))


(hn !(rf-subst _old _new nil nil))
(hn !(rf-subst _old _new (_old . _oldrest) (_old . _newrest))
    (rf-subst _old _new `(_old . _oldrest) `(_new . _newrest)))
(hn (rf-subst _old _new (_oldfirst . _oldrest) (_newfirst . _newrest))
    (rf-subst _old _new _oldrest _newrest))
