;;; -*- Mode: LISP; Base: 10 -*-
;;
;;  CONTAX example: The famous 8 queens problem
;;  ===============
;;

( defun not-diagonal-1-p ( x y )
  ( and (not (= x ( 1+ y )))
        (not (= x ( 1- y )))))

( defun not-diagonal-2-p ( x y )
  ( and (not (= x ( + y 2 )))
        (not (= x ( - y 2 )))))

( defun not-diagonal-3-p ( x y )
  ( and (not (= x ( + y 3 )))
        (not (= x ( - y 3 )))))

( defun not-diagonal-4-p ( x y )
  ( and (not (= x ( + y 4 )))
        (not (= x ( - y 4 )))))

( defun not-diagonal-5-p ( x y )
  ( and (not (= x ( + y 5 )))
        (not (= x ( - y 5 )))))

( defun not-diagonal-6-p ( x y )
  ( and (not (= x ( + y 6 )))
        (not (= x ( - y 6 )))))

( defun not-diagonal-7-p ( x y )
  ( and (not (= x ( + y 7 )))
        (not (= x ( - y 7 )))))

(defun not-equal (x y)
  (not (= x y)))

( compile 'not-diagonal-1-p )
( compile 'not-diagonal-2-p )
( compile 'not-diagonal-3-p )
( compile 'not-diagonal-4-p )
( compile 'not-diagonal-5-p )
( compile 'not-diagonal-6-p )
( compile 'not-diagonal-7-p )
( compile 'not-equal )

( time 

  ( progn

    ( contax:reset )
    
    ( contax:def-concept columns ( 1 2 3 4 5 6 7 8 ))

    ( contax:def-lisp-constraint not-equal ( x y ) (( columns )( columns ))
     not-equal )

    ( contax:def-lisp-constraint not-diagonal-1 ( x y ) (( columns )( columns ))
     not-diagonal-1-p )

    ( contax:def-lisp-constraint not-diagonal-2 ( x y ) (( columns )( columns ))
     not-diagonal-2-p )

    ( contax:def-lisp-constraint not-diagonal-3 ( x y ) (( columns )( columns ))
     not-diagonal-3-p )

    ( contax:def-lisp-constraint not-diagonal-4 ( x y ) (( columns )( columns ))
     not-diagonal-4-p )

    ( contax:def-lisp-constraint not-diagonal-5 ( x y ) (( columns )( columns ))
     not-diagonal-5-p )

    ( contax:def-lisp-constraint not-diagonal-6 ( x y ) (( columns )( columns ))
     not-diagonal-6-p )

    ( contax:def-lisp-constraint not-diagonal-7 ( x y ) (( columns )( columns ))
     not-diagonal-7-p )


    ( contax:make-variable q1 :domains ( columns ))

    ( contax:make-variable q2 :domains ( columns ))

    ( contax:make-variable q3 :domains ( columns ))

    ( contax:make-variable q4 :domains ( columns ))

    ( contax:make-variable q5 :domains ( columns ))

    ( contax:make-variable q6 :domains ( columns ))

    ( contax:make-variable q7 :domains ( columns ))

    ( contax:make-variable q8 :domains ( columns ))


    ( contax:make-constraint neq12 not-equal :x q1 :y q2 )

    ( contax:make-constraint neq13 not-equal :x q1 :y q3 )

    ( contax:make-constraint neq14 not-equal :x q1 :y q4 )

    ( contax:make-constraint neq15 not-equal :x q1 :y q5 )

    ( contax:make-constraint neq16 not-equal :x q1 :y q6 )

    ( contax:make-constraint neq17 not-equal :x q1 :y q7 )

    ( contax:make-constraint neq18 not-equal :x q1 :y q8 )

    ( contax:make-constraint neq23 not-equal :x q2 :y q3 )

    ( contax:make-constraint neq24 not-equal :x q2 :y q4 )

    ( contax:make-constraint neq25 not-equal :x q2 :y q5 )

    ( contax:make-constraint neq26 not-equal :x q2 :y q6 )

    ( contax:make-constraint neq27 not-equal :x q2 :y q7 )

    ( contax:make-constraint neq28 not-equal :x q2 :y q8 )

    ( contax:make-constraint neq34 not-equal :x q3 :y q4 )

    ( contax:make-constraint neq35 not-equal :x q3 :y q5 )

    ( contax:make-constraint neq36 not-equal :x q3 :y q6 )

    ( contax:make-constraint neq37 not-equal :x q3 :y q7 )

    ( contax:make-constraint neq38 not-equal :x q3 :y q8 )

    ( contax:make-constraint neq45 not-equal :x q4 :y q5 )

    ( contax:make-constraint neq46 not-equal :x q4 :y q6 )

    ( contax:make-constraint neq47 not-equal :x q4 :y q7 )

    ( contax:make-constraint neq48 not-equal :x q4 :y q8 )

    ( contax:make-constraint neq56 not-equal :x q5 :y q6 )
    
    ( contax:make-constraint neq57 not-equal :x q5 :y q7 )
    
    ( contax:make-constraint neq58 not-equal :x q5 :y q8 )
    
    ( contax:make-constraint neq67 not-equal :x q6 :y q7 )
    
    ( contax:make-constraint neq68 not-equal :x q6 :y q8 )
    
    ( contax:make-constraint neq78 not-equal :x q7 :y q8 )


    ( contax:make-constraint ndia12 not-diagonal-1 :x q1 :y q2 )

    ( contax:make-constraint ndia13 not-diagonal-2 :x q1 :y q3 )

    ( contax:make-constraint ndia14 not-diagonal-3 :x q1 :y q4 )

    ( contax:make-constraint ndia15 not-diagonal-4 :x q1 :y q5 )

    ( contax:make-constraint ndia16 not-diagonal-5 :x q1 :y q6 )

    ( contax:make-constraint ndia17 not-diagonal-6 :x q1 :y q7 )

    ( contax:make-constraint ndia18 not-diagonal-7 :x q1 :y q8 )

    ( contax:make-constraint ndia23 not-diagonal-1 :x q2 :y q3 )

    ( contax:make-constraint ndia24 not-diagonal-2 :x q2 :y q4 )

    ( contax:make-constraint ndia25 not-diagonal-3 :x q2 :y q5 )

    ( contax:make-constraint ndia26 not-diagonal-4 :x q2 :y q6 )

    ( contax:make-constraint ndia27 not-diagonal-5 :x q2 :y q7 )

    ( contax:make-constraint ndia28 not-diagonal-6 :x q2 :y q8 )

    ( contax:make-constraint ndia34 not-diagonal-1 :x q3 :y q4 )

    ( contax:make-constraint ndia35 not-diagonal-2 :x q3 :y q5 )

    ( contax:make-constraint ndia36 not-diagonal-3 :x q3 :y q6 )

    ( contax:make-constraint ndia37 not-diagonal-4 :x q3 :y q7 )

    ( contax:make-constraint ndia38 not-diagonal-5 :x q3 :y q8 )

    ( contax:make-constraint ndia45 not-diagonal-1 :x q4 :y q5 )

    ( contax:make-constraint ndia46 not-diagonal-2 :x q4 :y q6 )

    ( contax:make-constraint ndia47 not-diagonal-3 :x q4 :y q7 )

    ( contax:make-constraint ndia48 not-diagonal-4 :x q4 :y q8 )

    ( contax:make-constraint ndia56 not-diagonal-1 :x q5 :y q6 )

    ( contax:make-constraint ndia57 not-diagonal-2 :x q5 :y q7 )
    
    ( contax:make-constraint ndia58 not-diagonal-3 :x q5 :y q8 )

    ( contax:make-constraint ndia67 not-diagonal-1 :x q6 :y q7 )

    ( contax:make-constraint ndia68 not-diagonal-2 :x q6 :y q8 )

    ( contax:make-constraint ndia78 not-diagonal-1 :x q7 :y q8 )

    ; ( contax:init-hac )

    ( setf l ( contax:propagate :consistency-mode :global :number-of-solutions 1 ))))

#| stats on 29-09-92 (all solutions)
Evaluation of (PROGN
                (CONTAX:RESET)
                (CONTAX:DEF-CONCEPT COLUMNS #)
                (CONTAX:DEF-LISP-CONSTRAINT NOT-EQUAL # # NOT-EQUAL)
                (CONTAX:DEF-LISP-CONSTRAINT NOT-DIAGONAL-1 # # NOT-DIAGONAL-1-P) ...) took 54.3
46725 seconds of elapsed time including:
  0.873 seconds processing sequence breaks,
  8.951 seconds in the storage system (including 4.347 seconds waiting for pages):
    4.355 seconds processing 93 page faults including 34 fetches,
    4.241 seconds in creating and destroying pages, and
    0.354 seconds in miscellaneous storage system tasks.
The garbage collector has flipped; so no consing was measured. |#


#| stats on 29-09-92 (one solution)
Evaluation of (PROGN
                (CONTAX:RESET)
                (CONTAX:DEF-CONCEPT COLUMNS #)
                (CONTAX:DEF-LISP-CONSTRAINT NOT-EQUAL # # NOT-EQUAL)
                (CONTAX:DEF-LISP-CONSTRAINT NOT-DIAGONAL-1 # # NOT-DIAGONAL-1-P) ...) took 7.96
7571 seconds of elapsed time including:
  0.112 seconds processing sequence breaks,
  0.389 seconds in the storage system (including 0.000 seconds waiting for pages):
    0.000 seconds processing 0 page faults including 0 fetches,
    0.292 seconds in creating and destroying pages, and
    0.097 seconds in miscellaneous storage system tasks.
The garbage collector has flipped; so no consing was measured. |#