% A functional slowsort program

% Non-deterministic permutations are filtered through sorted:
sort(X) :-& sorted(perm(X)).

% Return sorted lists unchanged, fail for unsorted ones:
sorted([]) :-& [].
sorted([X]) :-& [X].
sorted([X,Y|Z]) :- lesseq(X,Y) & cons(X,sorted([Y|Z])).

% Non-ground call to delete returns U-less list and binds U:
perm([]) :-& [].
perm([X|Y]) :-& cons(U,perm(delete(U,[X|Y]))).

% Non-deterministic delete-element-from-list function:
delete(X,[X|Y]) :-& Y.
delete(X,[Y|Z]) :-& cons(Y,delete(X,Z)).

% A less-or-equal relation over s-terms:
lesseq(0,X) :-& true.
lesseq(s[X],s[Y]) :-& lesseq(X,Y).

% The cons function evaluates its arguments, unlike [ | ]:
cons(X,Y) :-& [X|Y].
