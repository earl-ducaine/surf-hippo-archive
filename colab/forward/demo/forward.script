This file contains a script of the forward evaluation of a logic
program starting with an initial facts. The strategy is implemented by
transformationof the logic program into a forward-program, which is
evaluated in the relational-functional machine RFM, which is extended
by a retain-stack and an extra forward code area. Top-down evaluation
of the transformed program simulated forward reasoning.

******************************************************************

colab,fwe> forward
Forward Subsystem Switch
colab,fwe> automatic
Activate automatic mode
colab,fwe> replace tx-parts
Replace a database to all known subsystems
colab,fwe> replace-facts m-wp-truncone
Replace the factbase
; Reading file "/home.arctecserv-2b/hinkelma/colab-kh/forward/demo/semi-magic/m-
wp-truncone.rf" ..
colab,fwe> fw-compile
Compile all databases
colab,fwe> fw-emul
Forward emulator mode

***** Derive all the consequences of a fact by breadth-first search *****

colab,fwe> rf-query (bf-all `(truncone cyl36 (tup center1 40)
                                             (tup center2 50)
                                             (tup radius1 20)
                                             (tup radius2 20))
                              _res)
Query to the RELFUN subsystem


************************ List of consequences: **************************

`(tup
  (cylinder cyl36 (tup center1 40) (tup center2 50) (tup radius1 20))
  (longturningsurface
   cyl36
   (tup radius 20)
   (tup leftmost cyl36)
   (tup rightmost cyl36) )
  (rshoulder
   rshoulder-cyl36-rng37
   (tup ground cyl36)
   (tup flank rng37)
   (tup leftmost cyl36)
   (tup rightmost rng37) )
  (lshoulder
   lshoulder-rng35-cyl36
   (tup ground cyl36)
   (tup flank rng35)
   (tup leftmost rng35)
   (tup rightmost cyl36) )
  (groove
   groove-rng35-cyl36-rng37
   (tup leftflank rng35)
   (tup ground cyl36)
   (tup rightflank rng37)
   (tup leftmost rng35)
   (tup rightmost rng37) ) )
(_res = _ny:2431)

More solutions?  (Y/N) n

colab,fwe> lr
List the rules

Rules:
(rl (rshoulder
     _featid
     (tup ground _ltsid)
     (tup flank _id2)
     (tup leftmost _l)
     (tup rightmost _id2) )
    (asc-tc
     _id2
     (tup center1 _zl)
     (tup center2 _zr)
     (tup radius1 _rad)
     (tup radius2 _rado) )
    (neighbor _r _id2)
    (longturningsurface
     _ltsid
     (tup radius _rad-lts)
     (tup leftmost _l)
     (tup rightmost _r) )
    (>= _rad-lts _rad)
    (< _rad-lts _rado)
    (is _featid (make-instance-name rshoulder _ltsid _id2)) )
(rl (lshoulder
     _featid
     (tup ground _ltsid)
     (tup flank _id2)
     (tup leftmost _id2)
     (tup rightmost _r) )
    (desc-tc
     _id2
     (tup center1 _zl)
     (tup center2 _zl)
     (tup radius1 _rado)
     (tup radius2 _rad) )
    (neighbor _id2 _l)
    (longturningsurface
     _ltsid
     (tup radius _rad-lts)
     (tup leftmost _l)
     (tup rightmost _r) )
    (>= _rad-lts _rad)
    (< _rad-lts _rado)
    (is _featid (make-instance-name lshoulder _id2 _ltsid)) )
(rl (groove
     _featid
     (tup leftflank _id1)
     (tup ground _id2)
     (tup rightflank _id3)
     (tup leftmost _lsleft)
     (tup rightmost _rsright) )
    (rshoulder
     _rshid
     (tup ground _id2)
     (tup flank _id3)
     (tup leftmost _rsleft)
     (tup rightmost _rsright) )
    (lshoulder
     _lshid
     (tup ground _id2)
     (tup flank _id1)
     (tup leftmost _lsleft)
     (tup rightmost _lsright) )
    (is
     _featid
     (make-instance-name groove _id1 _id2 _id3) ) )
(rl (longturningsurface
     _cyl
     (tup radius _rad)
     (tup leftmost _cyl)
     (tup rightmost _cyl) )
    (cylinder
     _cyl
     (tup center1 _zl)
     (tup center2 _zr)
     (tup radius1 _rad) ) )
(rl (longturningsurface
     _featid
     (tup radius _rad)
     (tup leftmost _l)
     (tup rightmost _rightm) )
    (asc-tc
     _right-end
     (tup center1 _zl)
     (tup center2 _zr)
     (tup radius1 _rad-first)
     (tup radius2 _rad-limit) )
    (neighbor _rightm _right-end)
    (is
     _rad
     (once
      (sub-lts-from-left
       (tup rad-max _rad-first)
       (tup rad-limit _rad-limit)
       (tup leftmost _l)
       (tup rightmost _rightm) ) ) )
    (different-tc _l _rightm)
    (is _featid (make-instance-name lts _l _rightm)) )
(rl (longturningsurface
     _featid
     (tup radius _rad)
     (tup leftmost _leftm)
     (tup rightmost _r) )
    (desc-tc
     _left-end
     (tup center1 _zl)
     (tup center2 _zr)
     (tup radius1 _rad-limit)
     (tup radius2 _rad-first) )
    (neighbor _left-end _leftm)
    (is
     _rad
     (once
      (sub-lts-from-right
       (tup rad-max _rad-first)
       (tup rad-limit _rad-limit)
       (tup rightmost _r)
       (tup leftmost _leftm) ) ) )
    (different-tc _r _leftm)
    (is _featid (make-instance-name lts _leftm _r)) )
(rl (asc-tc
     _x
     (tup center1 _zl)
     (tup center2 _zr)
     (tup radius1 _rada)
     (tup radius2 _radb) )
    (truncone
     _x
     (tup center1 _zl)
     (tup center2 _zr)
     (tup radius1 _rada)
     (tup radius2 _radb) )
    (< _rada _radb) )
(rl (desc-tc
     _x
     (tup center1 _zl)
     (tup center2 _zr)
     (tup radius1 _rada)
     (tup radius2 _radb) )
    (truncone
     _x
     (tup center1 _zl)
     (tup center2 _zr)
     (tup radius1 _rada)
     (tup radius2 _radb) )
    (> _rada _radb) )
(rl (cylinder
     _x
     (tup center1 _zl)
     (tup center2 _zr)
     (tup radius1 _rada) )
    (truncone
     _x
     (tup center1 _zl)
     (tup center2 _zr)
     (tup radius1 _rada)
     (tup radius2 _rada) ) )
(rl (ring
     _x
     (tup center1 _zl)
     (tup radius1 _rada)
     (tup radius2 _radb) )
    (truncone
     _x
     (tup center1 _zl)
     (tup center2 _zl)
     (tup radius1 _rada)
     (tup radius2 _radb) ) )
(rl (circle _x (tup center1 _zl) (tup radius1 _rada))
    (truncone
     _x
     (tup center1 _zl)
     (tup center2 _zl)
     (tup radius1 _rada)
     (tup radius2 0) ) )
(rl (circle _x (tup center1 _zl) (tup radius2 _radb))
    (truncone
     _x
     (tup center1 _zl)
     (tup center2 _zl)
     (tup radius1 0)
     (tup radius2 _radb) ) )
(rl (cone
     _x
     (tup center1 _zl)
     (tup center2 _zr)
     (tup radius1 _rada) )
    (truncone
     _x
     (tup center1 _zl)
     (tup center2 _zr)
     (tup radius1 _rada)
     (tup radius2 0) ) )
(rl (cone
     _x
     (tup center1 _zl)
     (tup center2 _zr)
     (tup radius2 _radb) )
    (truncone
     _x
     (tup center1 _zl)
     (tup center2 _zr)
     (tup radius1 0)
     (tup radius2 _radb) ) )


colab,fwe> lf
List factbase

Entire Facts:
(hn (truncone
     circ33
     (tup center1 0)
     (tup center2 0)
     (tup radius1 0)
     (tup radius2 25) ) )
(hn (truncone
     cyl34
     (tup center1 0)
     (tup center2 40)
     (tup radius1 25)
     (tup radius2 25) ) )
(hn (truncone
     rng35
     (tup center1 40)
     (tup center2 40)
     (tup radius1 25)
     (tup radius2 20) ) )
(hn (truncone
     cyl36
     (tup center1 40)
     (tup center2 50)
     (tup radius1 20)
     (tup radius2 20) ) )
(hn (truncone
     rng37
     (tup center1 50)
     (tup center2 50)
     (tup radius1 20)
     (tup radius2 25) ) )
(hn (truncone
     tr38
     (tup center1 50)
     (tup center2 60)
     (tup radius1 25)
     (tup radius2 40) ) )
(hn (truncone
     cyl39
     (tup center1 60)
     (tup center2 70)
     (tup radius1 40)
     (tup radius2 40) ) )
(hn (truncone
     rng40
     (tup center1 70)
     (tup center2 70)
     (tup radius1 40)
     (tup radius2 30) ) )
(hn (truncone
     cyl41
     (tup center1 70)
     (tup center2 110)
     (tup radius1 30)
     (tup radius2 30) ) )
(hn (truncone
     rng42
     (tup center1 110)
     (tup center2 110)
     (tup radius1 30)
     (tup radius2 20) ) )
(hn (truncone
     cyl43
     (tup center1 110)
     (tup center2 120)
     (tup radius1 20)
     (tup radius2 20) ) )
(hn (truncone
     rng44
     (tup center1 120)
     (tup center2 120)
     (tup radius1 20)
     (tup radius2 25) ) )
(hn (truncone
     cyl45
     (tup center1 120)
     (tup center2 150)
     (tup radius1 25)
     (tup radius2 25) ) )
(hn (truncone
     circ46
     (tup center1 150)
     (tup center2 150)
     (tup radius1 25)
     (tup radius2 0) ) )
(hn (neighbor circ33 cyl34))
(hn (neighbor cyl34 rng35))
(hn (neighbor rng35 cyl36))
(hn (neighbor cyl36 rng37))
(hn (neighbor rng37 tr38))
(hn (neighbor tr38 cyl39))
(hn (neighbor cyl39 rng40))
(hn (neighbor rng40 cyl41))
(hn (neighbor cyl41 rng42))
(hn (neighbor rng42 cyl43))
(hn (neighbor cyl43 rng44))
(hn (neighbor rng44 cyl45))
(hn (neighbor cyl45 circ46))

Derived Facts:
colab,fwe> fw-transform
Horizontal transformation to forward clauses
colab,fwe> list-forward
List forward-rules
(hn (forward
     (asc-tc
      _id2
      (tup center1 _zl)
      (tup center2 _zr)
      (tup radius1 _rad)
      (tup radius2 _rado) )
     _conclusion )
    (neighbor _r _id2)
    (longturningsurface
     _ltsid
     (tup radius _rad-lts)
     (tup leftmost _l)
     (tup rightmost _r) )
    (>= _rad-lts _rad)
    (< _rad-lts _rado)
    (is _featid (make-instance-name rshoulder _ltsid _id2))
    (is
     _conclusion
     `(rshoulder
       _featid
       (tup ground _ltsid)
       (tup flank _id2)
       (tup leftmost _l)
       (tup rightmost _id2) ) )
    (retain _conclusion) )
(hn (forward (neighbor _r _id2) _conclusion)
    (asc-tc
     _id2
     (tup center1 _zl)
     (tup center2 _zr)
     (tup radius1 _rad)
     (tup radius2 _rado) )
    (longturningsurface
     _ltsid
     (tup radius _rad-lts)
     (tup leftmost _l)
     (tup rightmost _r) )
    (>= _rad-lts _rad)
    (< _rad-lts _rado)
    (is _featid (make-instance-name rshoulder _ltsid _id2))
    (is
     _conclusion
     `(rshoulder
       _featid
       (tup ground _ltsid)
       (tup flank _id2)
       (tup leftmost _l)
       (tup rightmost _id2) ) )
    (retain _conclusion) )
(hn (forward
     (longturningsurface
      _ltsid
      (tup radius _rad-lts)
      (tup leftmost _l)
      (tup rightmost _r) )
     _conclusion )
    (asc-tc
     _id2
     (tup center1 _zl)
     (tup center2 _zr)
     (tup radius1 _rad)
     (tup radius2 _rado) )
    (neighbor _r _id2)
    (>= _rad-lts _rad)
    (< _rad-lts _rado)
    (is _featid (make-instance-name rshoulder _ltsid _id2))
    (is
     _conclusion
     `(rshoulder
       _featid
       (tup ground _ltsid)
       (tup flank _id2)
       (tup leftmost _l)
       (tup rightmost _id2) ) )
    (retain _conclusion) )
(hn (forward
     (desc-tc
      _id2
      (tup center1 _zl)
      (tup center2 _zl)
      (tup radius1 _rado)
      (tup radius2 _rad) )
     _conclusion )
    (neighbor _id2 _l)
    (longturningsurface
     _ltsid
     (tup radius _rad-lts)
     (tup leftmost _l)
     (tup rightmost _r) )
    (>= _rad-lts _rad)
    (< _rad-lts _rado)
    (is _featid (make-instance-name lshoulder _id2 _ltsid))
    (is
     _conclusion
     `(lshoulder
       _featid
       (tup ground _ltsid)
       (tup flank _id2)
       (tup leftmost _id2)
       (tup rightmost _r) ) )
    (retain _conclusion) )
(hn (forward (neighbor _id2 _l) _conclusion)
    (desc-tc
     _id2
     (tup center1 _zl)
     (tup center2 _zl)
     (tup radius1 _rado)
     (tup radius2 _rad) )
    (longturningsurface
     _ltsid
     (tup radius _rad-lts)
     (tup leftmost _l)
     (tup rightmost _r) )
    (>= _rad-lts _rad)
    (< _rad-lts _rado)
    (is _featid (make-instance-name lshoulder _id2 _ltsid))
    (is
     _conclusion
     `(lshoulder
       _featid
       (tup ground _ltsid)
       (tup flank _id2)
       (tup leftmost _id2)
       (tup rightmost _r) ) )
    (retain _conclusion) )
(hn (forward
     (longturningsurface
      _ltsid
      (tup radius _rad-lts)
      (tup leftmost _l)
      (tup rightmost _r) )
     _conclusion )
    (desc-tc
     _id2
     (tup center1 _zl)
     (tup center2 _zl)
     (tup radius1 _rado)
     (tup radius2 _rad) )
    (neighbor _id2 _l)
    (>= _rad-lts _rad)
    (< _rad-lts _rado)
    (is _featid (make-instance-name lshoulder _id2 _ltsid))
    (is
     _conclusion
     `(lshoulder
       _featid
       (tup ground _ltsid)
       (tup flank _id2)
       (tup leftmost _id2)
       (tup rightmost _r) ) )
    (retain _conclusion) )
(hn (forward
     (rshoulder
      _rshid
      (tup ground _id2)
      (tup flank _id3)
      (tup leftmost _rsleft)
      (tup rightmost _rsright) )
     _conclusion )
    (lshoulder
     _lshid
     (tup ground _id2)
     (tup flank _id1)
     (tup leftmost _lsleft)
     (tup rightmost _lsright) )
    (is
     _featid
     (make-instance-name groove _id1 _id2 _id3) )
    (is
     _conclusion
     `(groove
       _featid
       (tup leftflank _id1)
       (tup ground _id2)
       (tup rightflank _id3)
       (tup leftmost _lsleft)
       (tup rightmost _rsright) ) )
    (retain _conclusion) )
(hn (forward
     (lshoulder
      _lshid
      (tup ground _id2)
      (tup flank _id1)
      (tup leftmost _lsleft)
      (tup rightmost _lsright) )
     _conclusion )
    (rshoulder
     _rshid
     (tup ground _id2)
     (tup flank _id3)
     (tup leftmost _rsleft)
     (tup rightmost _rsright) )
    (is
     _featid
     (make-instance-name groove _id1 _id2 _id3) )
    (is
     _conclusion
     `(groove
       _featid
       (tup leftflank _id1)
       (tup ground _id2)
       (tup rightflank _id3)
       (tup leftmost _lsleft)
       (tup rightmost _rsright) ) )
    (retain _conclusion) )
(hn (forward
     (cylinder
      _cyl
      (tup center1 _zl)
      (tup center2 _zr)
      (tup radius1 _rad) )
     _conclusion )
    (is
     _conclusion
     `(longturningsurface
       _cyl
       (tup radius _rad)
       (tup leftmost _cyl)
       (tup rightmost _cyl) ) )
    (retain _conclusion) )
(hn (forward
     (asc-tc
      _right-end
      (tup center1 _zl)
      (tup center2 _zr)
      (tup radius1 _rad-first)
      (tup radius2 _rad-limit) )
     _conclusion )
    (neighbor _rightm _right-end)
    (is
     _rad
     (once
      (sub-lts-from-left
       (tup rad-max _rad-first)
       (tup rad-limit _rad-limit)
       (tup leftmost _l)
       (tup rightmost _rightm) ) ) )
    (different-tc _l _rightm)
    (is _featid (make-instance-name lts _l _rightm))
    (is
     _conclusion
     `(longturningsurface
       _featid
       (tup radius _rad)
       (tup leftmost _l)
       (tup rightmost _rightm) ) )
    (retain _conclusion) )
(hn (forward (neighbor _rightm _right-end) _conclusion)
    (asc-tc
     _right-end
     (tup center1 _zl)
     (tup center2 _zr)
     (tup radius1 _rad-first)
     (tup radius2 _rad-limit) )
    (is
     _rad
     (once
      (sub-lts-from-left
       (tup rad-max _rad-first)
       (tup rad-limit _rad-limit)
       (tup leftmost _l)
       (tup rightmost _rightm) ) ) )
    (different-tc _l _rightm)
    (is _featid (make-instance-name lts _l _rightm))
    (is
     _conclusion
     `(longturningsurface
       _featid
       (tup radius _rad)
       (tup leftmost _l)
       (tup rightmost _rightm) ) )
    (retain _conclusion) )
(hn (forward (different-tc _l _rightm) _conclusion)
    (asc-tc
     _right-end
     (tup center1 _zl)
     (tup center2 _zr)
     (tup radius1 _rad-first)
     (tup radius2 _rad-limit) )
    (neighbor _rightm _right-end)
    (is
     _rad
     (once
      (sub-lts-from-left
       (tup rad-max _rad-first)
       (tup rad-limit _rad-limit)
       (tup leftmost _l)
       (tup rightmost _rightm) ) ) )
    (is _featid (make-instance-name lts _l _rightm))
    (is
     _conclusion
     `(longturningsurface
       _featid
       (tup radius _rad)
       (tup leftmost _l)
       (tup rightmost _rightm) ) )
    (retain _conclusion) )
(hn (forward
     (desc-tc
      _left-end
      (tup center1 _zl)
      (tup center2 _zr)
      (tup radius1 _rad-limit)
      (tup radius2 _rad-first) )
     _conclusion )
    (neighbor _left-end _leftm)
    (is
     _rad
     (once
      (sub-lts-from-right
       (tup rad-max _rad-first)
       (tup rad-limit _rad-limit)
       (tup rightmost _r)
       (tup leftmost _leftm) ) ) )
    (different-tc _r _leftm)
    (is _featid (make-instance-name lts _leftm _r))
    (is
     _conclusion
     `(longturningsurface
       _featid
       (tup radius _rad)
       (tup leftmost _leftm)
       (tup rightmost _r) ) )
    (retain _conclusion) )
(hn (forward (neighbor _left-end _leftm) _conclusion)
    (desc-tc
     _left-end
     (tup center1 _zl)
     (tup center2 _zr)
     (tup radius1 _rad-limit)
     (tup radius2 _rad-first) )
    (is
     _rad
     (once
      (sub-lts-from-right
       (tup rad-max _rad-first)
       (tup rad-limit _rad-limit)
       (tup rightmost _r)
       (tup leftmost _leftm) ) ) )
    (different-tc _r _leftm)
    (is _featid (make-instance-name lts _leftm _r))
    (is
     _conclusion
     `(longturningsurface
       _featid
       (tup radius _rad)
       (tup leftmost _leftm)
       (tup rightmost _r) ) )
    (retain _conclusion) )
(hn (forward (different-tc _r _leftm) _conclusion)
    (desc-tc
     _left-end
     (tup center1 _zl)
     (tup center2 _zr)
     (tup radius1 _rad-limit)
     (tup radius2 _rad-first) )
    (neighbor _left-end _leftm)
    (is
     _rad
     (once
      (sub-lts-from-right
       (tup rad-max _rad-first)
       (tup rad-limit _rad-limit)
       (tup rightmost _r)
       (tup leftmost _leftm) ) ) )
    (is _featid (make-instance-name lts _leftm _r))
    (is
     _conclusion
     `(longturningsurface
       _featid
       (tup radius _rad)
       (tup leftmost _leftm)
       (tup rightmost _r) ) )
    (retain _conclusion) )
(hn (forward
     (truncone
      _x
      (tup center1 _zl)
      (tup center2 _zr)
      (tup radius1 _rada)
      (tup radius2 _radb) )
     _conclusion )
    (< _rada _radb)
    (is
     _conclusion
     `(asc-tc
       _x
       (tup center1 _zl)
       (tup center2 _zr)
       (tup radius1 _rada)
       (tup radius2 _radb) ) )
    (retain _conclusion) )
(hn (forward
     (truncone
      _x
      (tup center1 _zl)
      (tup center2 _zr)
      (tup radius1 _rada)
      (tup radius2 _radb) )
     _conclusion )
    (> _rada _radb)
    (is
     _conclusion
     `(desc-tc
       _x
       (tup center1 _zl)
       (tup center2 _zr)
       (tup radius1 _rada)
       (tup radius2 _radb) ) )
    (retain _conclusion) )
(hn (forward
     (truncone
      _x
      (tup center1 _zl)
      (tup center2 _zr)
      (tup radius1 _rada)
      (tup radius2 _rada) )
     _conclusion )
    (is
     _conclusion
     `(cylinder
       _x
       (tup center1 _zl)
       (tup center2 _zr)
       (tup radius1 _rada) ) )
    (retain _conclusion) )
(hn (forward
     (truncone
      _x
      (tup center1 _zl)
      (tup center2 _zl)
      (tup radius1 _rada)
      (tup radius2 _radb) )
     _conclusion )
    (is
     _conclusion
     `(ring
       _x
       (tup center1 _zl)
       (tup radius1 _rada)
       (tup radius2 _radb) ) )
    (retain _conclusion) )
(hn (forward
     (truncone
      _x
      (tup center1 _zl)
      (tup center2 _zl)
      (tup radius1 _rada)
      (tup radius2 0) )
     _conclusion )
    (is
     _conclusion
     `(circle _x (tup center1 _zl) (tup radius1 _rada)) )
    (retain _conclusion) )
(hn (forward
     (truncone
      _x
      (tup center1 _zl)
      (tup center2 _zl)
      (tup radius1 0)
      (tup radius2 _radb) )
     _conclusion )
    (is
     _conclusion
     `(circle _x (tup center1 _zl) (tup radius2 _radb)) )
    (retain _conclusion) )
(hn (forward
     (truncone
      _x
      (tup center1 _zl)
      (tup center2 _zr)
      (tup radius1 _rada)
      (tup radius2 0) )
     _conclusion )
    (is
     _conclusion
     `(cone
       _x
       (tup center1 _zl)
       (tup center2 _zr)
       (tup radius1 _rada) ) )
    (retain _conclusion) )
(hn (forward
     (truncone
      _x
      (tup center1 _zl)
      (tup center2 _zr)
      (tup radius1 0)
      (tup radius2 _radb) )
     _conclusion )
    (is
     _conclusion
     `(cone
       _x
       (tup center1 _zl)
       (tup center2 _zr)
       (tup radius2 _radb) ) )
    (retain _conclusion) )

colab,fwe>
