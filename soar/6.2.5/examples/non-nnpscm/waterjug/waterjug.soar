;;; 
;;; FILE               : waterjug.s (PSCM)
;;;

;;;
;;; AUTHOR(1)          : Brian.G.Milnes [ Soar 5.1.x ]
;;;

;;;
;;; CREATED(1)         : Nov  6, 89
;;;

;;;
;;; MODIFIED(6)        : Nov 28, 94     [ Soar 6.2.4 ] Aladin.Akyurek
;;; MODIFIED(5)        : Sep 28, 94     [ Soar 6.2.4 ] Aladin.Akyurek
;;; MODIFIED(4)        : Aug 25, 94     [ Soar 6.2.3 ] Aladin.Akyurek
;;; MODIFIED(3)        : Aug  3, 94     [ Soar 6.2.3 ] Aladin.Akyurek
;;; MODIFIED(2)        : May 15, 93     [ Soar 6.0.7 ] Aladin.Akyurek
;;; MODIFIED(1)        : Dec  9, 89     [ ?          ] Bob.Doorenbos
;;;

;;;
;;; May 15, 93         : Modernized both style and code; simplified
;;;                      computations needed for proposing and
;;;                      applying the pour operator; replaced
;;;                      productions for tracing state and operator 
;;;                      applications/selections; changed the mechanism
;;;                      to save the last operator applied.
;;; Aug  3, 94         : The operator pour(3:3,5:2) could not apply,
;;;                      now it does. Simplified the proposal of the
;;;                      pour operator. Added productions to trace
;;;                      the tied operators plus some other minor changes.
;;;                      Added also a psych note with references. 
;;; Aug 25, 94         : Added the statement (excise default*pass-back-success) 
;;;                      to remove the production in question from the default set. 
;;;                      The reason for this is that the task could not run 
;;;                      to completion with certain, rare sequences of
;;;                      evaluations during lookahead, because this
;;;                      production causes wrong learning.
;;; Sep 28, 94         : The rule default*pass-back-success in the default set
;;;                      has been modified in the version that supersedes 6.2.3;
;;;                      therefore the excise statement has been removed.
;;; Nov 28, 94         : Added 2 controle rules: One for the top level which
;;;                      makes Emptying a not completely full jug worst;
;;;                      The other biases Soar in the selection space
;;;                      to evaluate Pour before Empty or Fill.
;;;                           

;;;
;;; ABSTRACT. These Soar productions implement the waterjug task.
;;; The task is to find the sequence of steps that fill the three gallon 
;;; jug with one gallon of water.  There are a well that has an infinite
;;; amount of water, a five gallon jug, and a three gallon jug.
;;;

;;;
;;; DESCRIPTION. The task problem space has three operators: empty, 
;;; fill, and pour. Empty empties a jug into the well. Fill fills up
;;; a jug from the well. Pour pours some or all of the contents
;;; from one jug into the other jug. Pour can only pour out the contents 
;;; of the jug until the source is empty or the destination is full.
;;; State Structure: Each jug has slots to record its capacity [volume],
;;; the amount of water it contains [contents], and the capacity 
;;; available [free] which is the volume minus the contents.
;;;   (state s1 ^jug j1)
;;;   (jug j1 ^volume v1 ^contents c1 ^free f1),
;;; where v1, c1, and f1 are numbers.
;;;

;;;
;;; A PSYCHOLOGICAL NOTE. The present set of productions could be used as a
;;; starting point to study models and issues associated with (variant) 
;;; water jug tasks. Relevant references are listed below.
;;;

;;;
;;; REFERENCES. [1] Atwood, M. E., & Polson, P. G. (1976). A process 
;;; model for water jug problems. Cognitive Psychology, 8, 191-216.
;;;             [2] Ernst, G. W., & Newell, A. (1969). GPS: A case study in
;;; generality and problem solving. New York: Academic Press.
;;;             [3] Mortensen, U. (1973). Models for some elementary
;;; problem solving processes. In A. Elithorn & D. Jones (Eds.), Artificial
;;; and human thinking. San Francisco, CA: Jossey-Bass.
;;;

;;;
;;; TOP GOAL:
;;; WATERJUG
;;;

(sp top-goal*elaborate*goal*waterjug
    (goal <g> ^object nil)
    -->
    (<g> ^name waterjug))

;;;
;;; TOP GOAL PROBLEM SPACE:
;;; WATERJUG
;;;

(sp waterjug*propose*space*waterjug
    (goal <g> ^name waterjug ^object nil)
    --> 
    (<g> ^problem-space <p>)
    (<p> ^name waterjug ^default-state-copy yes)
    (<p> ^two-level-attributes jug + & ))

;;;
;;; WATERJUG PROBLEM SPACE:
;;; DESIRED STATE
;;;

(sp waterjug*elaborate*goal*desired-state
    (goal <g> ^problem-space <p> ^object nil)
    (<p> ^name waterjug) 
    -->
    (<g> ^desired <d>)
    (<d> ^jug <j> ^contents 1)
    (<j> ^volume 3))

;;;
;;; WATERJUG PROBLEM SPACE:
;;; INITIAL STATE
;;;

(sp waterjug*propose*state*initial-state
    (goal <g> ^name waterjug
              ^problem-space <p> 
              ^desired <d>)
    (<p> ^name waterjug)
    (<d> ^jug <i> ^contents 1)
    (<i> ^volume 3)
    -->
    (<g> ^state <s>)
    (<s> ^jug <i> + &, <j> + &)
    (<i> ^name three-gallon
         ^volume 3
         ^contents 0
         ^free 3) 
    (<j> ^name five-gallon
         ^volume 5
         ^contents 0
         ^free 5))

;;;
;;; WATERJUG PROBLEM SPACE OPERATORS:
;;; EMPTY, FILL, AND POUR
;;;

(sp waterjug*propose*operator*empty
    "contents(j) > 0 --> empty(j)." 
    (goal <g> ^problem-space <p> ^state <s>)
    (<p> ^name waterjug) 
    (<s> ^jug <i>)
    (<i> ^contents > 0)
    -->
    (<g> ^operator <o>) 
    (<o> ^name empty
         ^done? no 
         ^jug <i>))

(sp waterjug*propose*operator*fill
    "contents(j) = 0 --> fill(j)." 
    (goal <g> ^problem-space <p> ^state <s>) 
    (<p> ^name waterjug) 
    (<s> ^jug <i>)
    (<i> ^contents 0)
    --> 
    (<g> ^operator <o>)
    (<o> ^name fill 
         ^done? no 
         ^jug <i>))

(sp waterjug*propose*operator*pour
    "contents(i) > 0 & free(j) > 0 --> pour(i,j)."
    (goal <g> ^problem-space <p> ^state <s>)
    (<p> ^name waterjug) 
    (<s> ^jug <i> { <> <i> <j> }) 
    (<i> ^contents > 0)
    (<j> ^free > 0)
    --> 
    (<g> ^operator <o>)
    (<o> ^name pour 
         ^done? no 
         ^jug <i> 
         ^into <j>))

;;;
;;; WATERJUG PROBLEM SPACE:
;;; OPERATOR APPLICATION
;;;

(sp apply*empty
    (goal <g> ^operator <o>)
    (goal <g> ^problem-space <p> ^state <s>)
    (<o> ^name empty 
         ^done? no 
         ^jug <i>)
    (<p> ^name waterjug)
    (<s> ^jug <i>)
    (<i> ^volume <volume> 
         ^contents <contents> 
         ^free <free>)
    --> 
    (<i> ^contents 0 <contents> - )
    (<i> ^free <volume> <free> - )
    (<o> ^done? yes no - ))

(sp apply*fill 
    (goal <g> ^operator <o>)
    (goal <g> ^problem-space <p> ^state <s>) 
    (<o> ^name fill 
         ^done? no 
         ^jug <i>)
    (<p> ^name waterjug) 
    (<s> ^jug <i>)
    (<i> ^volume <volume> 
         ^contents 0 
         ^free <volume>)
    --> 
    (<i> ^contents <volume> 0 - )
    (<i> ^free 0 <volume> - )
    (<o> ^done? yes no - ))

 ;; Apply pour when contents of source jug i is less than 
 ;; or equal to the capacity available of the destination jug j.
  ;
  
(sp apply*pour*source*contents*less-or-equal
    (goal <g> ^operator <o>)
    (goal <g> ^problem-space <p> ^state <s>) 
    (<o> ^name pour 
         ^done? no 
         ^jug <i> 
         ^into <j>)
    (<p> ^name waterjug)
    (<s> ^jug <i> <j>) 
    (<j> ^volume <jvol> 
         ^contents <jcon> 
         ^free <jfree>)
    (<i> ^volume <ivol> 
         ^contents <icon> <= <jfree> 
         ^free <ifree>)
    --> 
    (<i> ^contents 0 <icon> - )
    (<i> ^free <ivol> <ifree> - )
    (<j> ^contents (+ <jcon> <icon>) <jcon> - ) 
    (<j> ^free (- <jfree> <icon>) <jfree> - )
    (<o> ^done? yes no - ))

 ;; Apply pour when contents of source jug i is more
 ;; than the capacity available of the destination jug j.
  ;
  
(sp apply*pour*contents-more
    (goal <g> ^operator <o>)
    (goal <g> ^problem-space <p> ^state <s>) 
    (<o> ^name pour 
         ^done? no 
         ^jug <i> 
         ^into <j>)
    (<p> ^name waterjug)
    (<s> ^jug <i> <j>)
    (<j> ^volume <jvol> 
         ^contents <jcon> 
         ^free <jfree>)
    (<i> ^volume <ivol> 
         ^contents <icon> > <jfree> 
         ^free <ifree>)
    --> 
    (<i> ^contents (- <icon> <jfree>) <icon> - )
    (<i> ^free (+ <ifree> <jfree>) <ifree> - )
    (<j> ^contents <jvol> <jcon> - ) 
    (<j> ^free 0 <jfree> - )
    (<o> ^done? yes no - ))

(sp waterjug*save*operator*applied*first-time
    (goal <g> ^operator <o>)
    (goal <g> ^problem-space <p> ^state <s>)
    (<o> ^name <name>)
    (<p> ^name waterjug)
    (<s> -^applied)
    -->
    (<s> ^applied <o>))
	    
(sp waterjug*save*operator*applied*later-times
    (goal <g> ^operator <o>)
    (goal <g> ^problem-space <p> ^state <s>)
    (<o> ^name <name>)
    (<p> ^name waterjug)
    (<s> ^applied <q> <> <o>)
    -->
    (<s> ^applied <o> <q> - ))
	    
;;;
;;; WATERJUG PROBLEM SPACE:
;;; OPERATOR TERMINATION
;;;

(sp terminate*empty
    (goal <g> ^operator <o>)
    (goal <g> ^problem-space <p> ^state <s>)
    (<o> ^name empty ^done? yes)
    (<p> ^name waterjug)
    --> 
    (<g> ^operator <o> @ ))

(sp terminate*fill
    (goal <g> ^operator <o>)
    (goal <g> ^problem-space <p> ^state <s>)
    (<o> ^name fill ^done? yes)
    (<p> ^name waterjug)
    --> 
    (<g> ^operator <o> @ ))

(sp terminate*pour
    (goal <g> ^operator <o>)
    (goal <g> ^problem-space <p> ^state <s>)
    (<o> ^name pour ^done? yes)
    (<p> ^name waterjug)
    --> 
    (<g> ^operator <o> @ ))

;;;
;;; WATERJUG PROBLEM SPACE: 
;;; STATE EVALUATION
;;;

;;;
;;; EVALUATION: STATE FAILURE
;;;

(sp waterjug*evaluate*state*failure*state-duplicate
    ;<g*> is the current goal, i.e., last subgoal,
   -(goal <goal> ^object <g*>)
    (goal <g*> ^desired <desired>)
    (goal <g*> ^problem-space <p1> ^state <s*>)
    (<p1> ^name waterjug)
    ;in which <o*> is applied.
    (<s*> ^jug <jug-i> <jug-j> ^applied <o*>) 
    (<jug-i> ^volume 3 ^contents <x>)
    (<jug-j> ^volume 5 ^contents <y>)
    ;<g1> is a parent goal of <g*>.
    (goal { <> <g*> <g1> } ^problem-space <p1> ^state <s1>)
    (<s1> ^jug <jug-m> <jug-n>)
    (<jug-m> ^volume 3 ^contents <x>)
    (<jug-n> ^volume 5 ^contents <y>)
    --> 
    (<s*> ^failure <desired>)
    (write (crlf) 
           |  Current state | <s*> 
           | is a duplicate of the state | <s1> 
           |.|))

;;;
;;; EVALUATION: STATE SUCCESS/GOAL TEST
;;;

(sp waterjug*evaluate*state*success
    (goal <g> ^desired <d>) 
    (goal <g> ^problem-space <p> ^state <s>)
    (<p> ^name waterjug)
    (<s> ^jug <i>) 
    (<i> ^volume 3 ^contents 1)
    --> 
    (<s> ^success <d>))

;;;
;;; WATERJUG PROBLEM SPACE: 
;;; SEARCH CONTROL
;;;

 ;; There are two cases of inverse operators:
 ;; fill(jug[i]) followed by empty(jug[i]) or
 ;; pour(jug[i],jug[j]) followed by pour(jug[j],jug[i]).
  ;

(sp waterjug*operator*inverse*empty*reject
    "Reject empty, inverse of fill."
    (goal <g> ^operator <o> + )
    (goal <g> ^problem-space <p> ^state <s>)
    (<o> ^name empty ^jug <i>)
    (<p> ^name waterjug)
    (<s> ^applied <q>)
    (<q> ^name fill ^jug <i>)
    --> 
    (<g> ^operator <o> - ))

(sp waterjug*operator*inverse*pour*reject
    "Reject inverse operator."
    (goal <g> ^operator <o> + )
    (goal <g> ^problem-space <p> ^state <s>)
    (<o> ^name pour ^jug <i> ^into <j>)
    (<p> ^name waterjug)
    (<s> ^applied <q>)
    (<q> ^name pour ^jug <j> ^into <i>)
    --> 
    (<g> ^operator <o> - ))
    
(sp waterjug*empty*jug-not-full*worst
    (goal <g> ^operator <o> + )
    (goal <g> ^problem-space <p> ^state <s>)
    (<o> ^name empty ^jug <i>)
    (<p> ^name waterjug)
    (<s> ^jug <i>)
    (<i> ^volume <v> ^contents < <v> )
    --> 
    (<g> ^operator <o> < ))

 ;; The production that follows biases Soar to
 ;; consider evaluating Pour before Fill or Empty.
  ; 

(sp waterjug*evaluate-object*pour*better
    (goal <g> ^operator <o> + )
    (<o> ^name evaluate-object
         ^object <x>)
    (<x> ^name pour)
    -->
    (<g> ^operator <o> > ))
         
;;;
;;; WATERJUG PROBLEM SPACE: 
;;; MONITOR STATE AND OPERATORS
;;;

(sp waterjug*monitor*state 
    (goal <g> ^problem-space <p> ^state <s>)
    (<p> ^name waterjug)
    (<s> ^jug <i> <j>)
    (<i> ^volume 3 ^contents <icon>)
    (<j> ^volume 5 ^contents <jcon>)
    --> 
    (write (crlf)
           |  3:| <icon> 
           | 5:| <jcon>))

(sp waterjug*monitor*operator-application*empty
    (goal <g> ^operator <o>)
    (<o> ^name empty
         ^done? no 
    	 ^jug <i>)
    (<i> ^volume <volume> ^contents <contents>)
    -->
    (write (crlf) 
    	   |  EMPTY(| <volume> 
    	   |:| <contents> 
    	   |)|))

(sp waterjug*monitor*operator-application*fill
    (goal <g> ^operator <o>)
    (<o> ^name fill 
         ^done? no 
    	 ^jug <i>)
    (<i> ^volume <volume> ^contents <contents>)
    -->
    (write (crlf) 
    	   |  FILL(| <volume> 
    	   |:| <contents> 
    	   |)|))

(sp waterjug*monitor*operator-application*pour
    (goal <g> ^operator <o>)
    (<o> ^name pour 
         ^done? no 
    	 ^jug <i>
    	 ^into <j>)
    (<i> ^volume <ivol> ^contents <icon>)
    (<j> ^volume <jvol> ^contents <jcon>)
    -->
    (write (crlf) 
    	   |  POUR(| <ivol> 
    	   |:| <icon> 
    	   |,| <jvol>
    	   |:| <jcon>
    	   |)|))

(sp waterjug*monitor*tied-operator*empty
    (goal <g> ^impasse tie
              ^attribute operator 
              ^item <item>)
    (<item> ^name empty ^jug <i>)
    (<i> ^volume <volume> ^contents <contents>)
    -->
    (write (crlf) 
    	   |  | <item> 
    	   |: empty(| <volume> 
    	   |:| <contents> 
    	   |)|))

(sp waterjug*monitor*tied-operator*fill
    (goal <g> ^impasse tie 
              ^attribute operator 
              ^item <item>)
    (<item> ^name fill ^jug <i>)
    (<i> ^volume <volume> ^contents <contents>)
    -->
    (write (crlf) 
    	   |  | <item> 
    	   |: fill(| <volume> 
    	   |:| <contents> 
    	   |)|))

(sp waterjug*monitor*tied-operator*pour
    (goal <g> ^impasse tie 
              ^attribute operator 
              ^item <item>)
    (<item> ^name pour ^jug <i> ^into <j>)
    (<i> ^volume <ivol> ^contents <icon>)
    (<j> ^volume <jvol> ^contents <jcon>)
    -->
    (write (crlf) 
    	   |  | <item> 
    	   |: pour(| <ivol> 
    	   |:| <icon> 
    	   |,| <jvol>
    	   |:| <jcon>
    	   |)|))

;;; eof of waterjug.s (Version PSCM)
