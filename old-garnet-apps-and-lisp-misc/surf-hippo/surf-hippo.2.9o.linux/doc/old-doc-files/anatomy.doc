****************************************************************
****************************************************************
****************************************************************


	Processing Anatomy Files


****************************************************************
****************************************************************
****************************************************************

This file describes conversions of various anatomy file formats into
Surf-Hippo format. Note that the other general way to create cell
geometries is "by hand", using functions like CREATE-SEGMENT,
CREATE-TREE or MAKE-SOMA-SEGMENT-CHAIN, as explained in circuits.doc.

-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*

			Table of Contents

1. Anatomy File Types
2. Using The Surf-Hippo Hack of ntscable to Translate Neuronal Anatomy Files
3. Neurolucida Conversion


-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*


****************************************************************
****************************************************************

**********************************************************************
**********************************************************************

	Anatomy File Types

**********************************************************************
**********************************************************************

As explained below, a hack of the Unix program ntscable is used to
translate certain anatomical file formats into Lisp files that then
may be input into Surf-Hippo. These formats include:

	NTS (Neuron Tracing System, Eutectic Electronics)
	Rodney Douglas 
	Rocky Nevin

Neurolucida format files, on the other hand, are processed directly by
Surf-Hippo.

When loading anatomy files using explicit functions such as SURF,
SURFLOAD, or ADD-CIRCUIT, you must set the the global variable
*CIRCUIT-FILE-TYPE* as appropriate for each file. The revalent values
are:

	:NEUROLUCIDA
	:LISP

In this section, only the first two values are pertinent. If anatomy
files are loaded with the menus, this variable is set automatically.

**********************************************************************
**********************************************************************

		Using The Surf-Hippo Hack of ntscable
		 to Translate Neuronal Anatomy Files

**********************************************************************
**********************************************************************


The geometry of the soma and dendritic tree for a cell model may be
derived directly from various anatomical reconstruction file formats.
The basic process is:

				   
	    anatomy.file that can be digested by ntscable

				  |
				  |
		                  | ntscable (under Unix)
				  |
				  |
				  V

		     Surf-Hippo lisp circuit file

				  |
				  |
			          | editing (optional)
				  |
				  V

		Load circuit file into the simulation
	  with menus or via scripts using a function such as
	  READ-IN-CIRCUIT (see scripts.doc or circuits.doc)
				   
				   

**************************************************************
ntscable and Surf-Hippo

ntscable is a C program written by JC Wathey, then at the Computational
Neurobiology Laboratory of the Salk Institute. From the
ntscable.doc file:

     "This program translates a digitized morphological
     description of a neuron into files which can be used
     directly by the simulation programs "CABLE" and
     "NEURON", by Michael Hines of Duke University (Hines,
     1989).  In its original incarnation, ntscable could
     only read data files in the syntax of the Neuron
     Tracing System (Eutectic Electronics) and could only
     produce output in CABLE syntax; hence the name
     "ntscable".  The latest version can also read data
     files generated by the digitizing systems of Rodney
     Douglas and Rocky Nevin.  All of these digitizing
     systems are similar in concept.  Since the Eutectic
     NTS system is the most widely used, it is described
     in some detail under INPUT FILE SYNTAX, below.
     Special considerations for using Douglas and Nevin
     data files are also described there."

We have hacked ntscable a bit so that it will generate files that
Surf-Hippo can digest, using functions found in
surf-hippo/src/development/ntscable.lisp. All the files associated
with ntscable itself are found in the surf-hippo/ntscable/ directory
The file ntscable/ntscable.doc is the original documentation for
ntscable, while the file that you are reading now is just relevant to
Surf-Hippo.

NOTE: ntscable must be (re)compiled with the Surf-Hippo hack of
write.c (surf-hippo-write.c) and the associated makefile. A recompiled
executable "ntscable" file is found in the
surf-hippo/ntscable/ntscable directory.

**************************************************************
Running ntscable for Making Surf-Hippo Anatomy Files


To translate an anatomy file into a Surf-Hippo (lisp) file, you run
the modified ntscable from UNIX (*NOT* from LISP!!):

 unix-prompt> ntscable -x n input-anatomy-file output-lisp-file

In other words, compiling ntscable with surf-hippo-write.c causes the
"-x n" option (originally -> generate NEURON format file) to mean
"generate a Surf-Hippo format file".

ntscable assigns each point of the cell the original anatomical
coordinates, which may be referenced to an arbitrary origin.
Surf-Hippo, on the other hand, assigns the (relative) origin of each
cell to that cell's soma center. Thus, the NODE-RELATIVE-COORDINATES
slots for segments are with respect to the soma origin. The
NODE-ABSOLUTE-COORDINATES slot for the segments and the soma of a cell
are calculated by adding the relative coordinates to the value in the
cell's CELL-ORIGIN slot. Since ntscable assigns essentially absolute
coordinates to the cell elements, Surf-Hippo adjusts these
coordinates, according the location of the soma as defined by
ntscable, so that the soma relative coordinate is at the origin, and
everything in the cell is referenced from there, as explained.

It is possible that the input anatomy files will have more than one
(connected) point with the same coordinates. The processing by the
ntscable.lisp functions kills the resulting zero-length segments.

**************************************************************
ntscable Somas -> Surf-Hippo


The soma dimensions have two characteristics, as determined by
ntscable. First, this program calculates the diameter of an equivalent
spherical soma, and it is this quantity which Surf-Hippo uses for the
electrical representation of the soma. This is reflected in a LISP
form near the beginning of the ntscable output file that is something
like this:

 (setq *nts-radius* (sqrt (/ 1453.39 (* 3.14159 4))))   

This may be edited if necessary before loading the file into
Surf-Hippo.  In addition, the soma diameter may be redefined by the
Surf-Hippo user menu.

ntscable also generates a list of parallel circles (slices)
representing the soma, and a point list that follows an outline which
is orthogonal to the slices. Surf-Hippo uses these data for generating
the graphical picture of the soma. This shape is IRRELEVANT with
respect to the circuit representation of the soma. The assumption is
that ntscable has calculated a reasonable spherical approximation to
the anatomical points.

**************************************************************
Surf-Hippo Addendum to the ntscable Output Files


The Surf-Hippo version of ntscable produces an output file that has,
at the end, several LISP forms that may also be edited as desired.
These include (with their default values):

  (setq *nts-cell-type* "ntscable")
  (setq *nts-cell-name* "ntscable")
  (setq *nts-r-mem* 40000.0)
  (setq *nts-soma-r-mem* 40000.0)
  (setq *nts-r-a* 200.0)

You also may want to add a form like the following:

  (setq *nts-cell-type-notes* 
        "Sub-genius pyramidal neuron, area Z, digitized by Ramon Y. Cajal")


For large cell files, it is much more efficient to load compiled files
into Surf-Hippo than the source (ascii) files. The file browser that
appears when a file is to be loaded into Surf-Hippo tags both *.lisp
files and *.sparcf (compiled) files.


When the global variable *ADD-CELL-NAME-TO-SEGS* is T, then the
value of *NTS-CELL-NAME* is prepended on the segment names derived
from the original anatomy list. This is necessary if you are going to
use the same anatomy file for more than one cell.

**********************************************************************
Some notes on Rocky Nevin format files:


A point labeled "P" generates

	DG-m49-4-22-92: invalid point type 'P' in line 12

Changing the "P" to a "B" seems to do the right thing.



Apparently, the EOF must occur at the end of the last line, i.e. no
extra CRs or LFs. Otherwise (?)

	read_nevin: syntax error in DG-m49-4-22-92 at line 736:


**********************************************************************
**********************************************************************

	Neurolucida File Format


**********************************************************************
**********************************************************************

Neurolucida files are processed by the function

	read-neurolucida-file FILENAME &optional CELL-NAME

In general, you will not have to call this function explicitly.
However, if you are loading a Neurolucida file without using the
menus, e.g.  with SURFLOAD or ADD-CIRCUIT, then you must make sure
that the global variable *CIRCUIT-FILE-TYPE* is set propertly
beforehand, as mentioned earlier:

	(setq *CIRCUIT-FILE-TYPE* :NEUROLUCIDA)


