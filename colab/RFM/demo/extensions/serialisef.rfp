
serialise(L) :- numbered(arrange(pairlists(L, R)), 1) & R.
pairlists([X | L], [Y | R]) :-& tup(pair[X, Y] | pairlists(L, R)).
pairlists([], []) :-& tup().
arrange([X | L]) :- partition(L, X, L1, L2),
                    T1 is arrange(L1),
                    T2 is arrange(L2) &
                    tree[T1, X, T2].
arrange([]) :-& void.
partition([X | L], X, L1, L2) :- partition(L, X, L1, L2).
partition([X | L],
          Y,
          [X | L1],
          L2) :- before(X, Y), partition(L, Y, L1, L2).
partition([X | L],
          Y,
          L1,
          [X | L2]) :- before(Y, X), partition(L, Y, L1, L2).
partition([], Y, [], []).
before(pair[X1, Y1], pair[X2, Y2]) :- string<(X1, X2).
numbered(tree[T1, pair[X, N1], T2], N0) :-& 
  numbered(T2, 1+(N1 is numbered(T1, N0))).
numbered(void, N) :-& N.