
rfi> exec "demostruc.bat"

batchjob executing...

rfi> ;;; Structure Sharing by the NORMALIZER

rfi> ; Thomas Krause

rfi> ; DFKI Kaiserslautern, 07. 02. 1991

rfi> 

rfi> ; The example is also discuss in section 2 of the manual!

rfi> 

rfi> inter

rfi> destroy

rfi> consult "demostruc"

rfi> l
(ft (foo (f b) (f _v) _v)
    (is _w `(g (f _v)))
    (is _w _u)
    (is _u `(g (f b)))
    (bar _v _w) )
(hn (bar _r _s))

rfi> (foo _u _v _w)
true
(_w = b)
(_v = (f b))
(_u = (f b))

rfi> more

unknown
rfi> 

rfi> 

rfi> ; Now normalising the database by the command HORIZON

rfi> 

rfi> horizon

rfi> l
(ft (foo _4 _4 b)
    (is _4 `(f b))
    (is _u `(g _4))
    (bar b _u) )
(hn (bar _r _s))

rfi> ; the program behaves as above

rfi> 

rfi> (foo _u _v _w)
true
(_w = b)
(_v = (f b))
(_u = (f b))

rfi> more

unknown
rfi> 

rfi> 

rfi> compile

rfi> 

rfi> ; The RFM-instructions

rfi> listclass foo/3
((proc
  foo/3
  1
  (fun1eva
   nil
   ((_4 (1 (2 1) nil)) (_u (2 nil (2))))
   (chunk
    ((usrlit
      (foo (_4 (first safe temp)) (_4 (nonfirst safe temp)) b)
      (3 0 (3 1 2)) )
     (is (_4 (nonfirst safe temp)) `(f b))
     (is
      (_u (first unsafe temp))
      `(g (_4 (nonfirst safe temp))) )
     (usrlit (bar b (_u (nonfirst unsafe temp))) (2 0 (1))) )
    (3 nil) ) ) ))


rfi> listcode foo/3
((get_constant b 3)
 (get_value_temp 1 2)
 (get_structure (f 1) 1)
 (unify_constant b)
 (put_structure (g 1) 2)
 (unify_value_temp 1)
 (put_constant b 1)
 (execute bar/2) )


rfi> 

rfi> emul

rfe> 

rfe> ; The RFM-code is correct

rfe> (foo _u _v _w)
true

(_u = (f b))
(_v = (f b))
(_w = b)

rfe> 

rfe> inter

rfi> 

rfi> 

batchjob done...
